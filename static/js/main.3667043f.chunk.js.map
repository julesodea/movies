{"version":3,"sources":["img/logo.png","components/toggle/Togglerpc.jsx","components/Portal/Portal.jsx","components/modal/modal.jsx","components/trailer/trailer.jsx","components/movie/movie.component.jsx","components/movie-list/movie-list.component.jsx","components/full-list/full-list.component.jsx","test/test.component.jsx","App.js","index.js"],"names":["module","exports","Toggle","state","on","toggle","setState","children","this","props","Component","portalRoute","document","getElementById","Portal","el","createElement","appendChild","removeChild","ReactDOM","createPortal","Modal","className","onClick","Trailer","trailers","fetch","id","then","response","json","users","results","map","trailer","key","target","href","name","style","position","paddingBottom","paddingTop","height","top","left","width","src","frameBorder","Movie","movie","backdrop_path","alt","vote_average","vote_count","release_date","title","backgroundImage","MovieList","movies","FullList","onError","e","onerror","borderRadius","overview","Test","filterSearch","event","term","value","counter","query","fetchMovies","increase","decrease","total_pages","page_num","search","process","toggleActive","undefined","toggleActiveReset","placeholder","onChange","marginLeft","App","searchField","page","filteredMovies","filter","toLowerCase","includes","display","justifyContent","alignItems","Logo","render"],"mappings":"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","file":"static/js/main.3667043f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.4ea3be06.png\";","import React, { Component } from 'react';\n\nexport default class Toggle extends Component {\n  state = {\n    on: false\n  };\n\n  toggle = () => {\n    this.setState({\n      on: !this.state.on\n    });\n  };\n\n  render() {\n    const { children } = this.props;\n    return children({\n      on: this.state.on,\n      toggle: this.toggle\n    });\n  }\n}\n ","import { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst portalRoute = document.getElementById('portal');\n\nexport default class Portal extends Component {\n  constructor() {\n    super();\n\n    this.el = document.createElement('div');\n  }\n\n  componentDidMount() {\n    portalRoute.appendChild(this.el);\n  }\n\n  componentWillUnmount() {\n    portalRoute.removeChild(this.el);\n  }\n\n  render() {\n    const { children } = this.props;\n    return ReactDOM.createPortal(children, this.el);\n  }\n}\n","import React, { Component } from 'react';\nimport Portal from '../Portal/Portal';\nimport './modal.styles.scss';\n\nexport default class Modal extends Component {\n  render() {\n    const { children, toggle, on } = this.props;\n    return (\n      <Portal>\n        {on && (\n          <div className=\"modal-wrapper\">\n            <button onClick={toggle}>Close</button>\n            <div>{children}</div>\n          </div>\n        )}\n      </Portal>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Trailer extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      trailers: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${this.props.id}/videos?api_key=407a626cc10a99287f2964816749416a&language=en-US`\n    )\n      .then(response => response.json())\n      .then(users => this.setState({ trailers: users.results }));\n  }\n  render() {\n    return (\n      <div>\n        {this.state.trailers.map(trailer => (\n          <h1 key={trailer.id}>\n            <div>\n              <a\n                target=\"__blank\"\n                href={`https://youtube.com/watch?v=${trailer.key}`}\n              >\n                {trailer.name}\n              </a>\n              <div\n                className=\"video\"\n                style={{\n                  position: 'relative',\n                  paddingBottom: '40.25%' /* 16:9 */,\n                  paddingTop: 25,\n                  height: 0\n                }}\n              >\n                <iframe\n                  style={{\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    width: '640px',\n                    height: '360px'\n                  }}\n                  src={`https://www.youtube.com/embed/${trailer.key}`}\n                  frameBorder=\"0\"\n                />\n              </div>\n            </div>\n          </h1>\n        ))}\n      </div>\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport './movie.styles.scss';\nimport Toggle from '../toggle/Togglerpc';\nimport Modal from '../modal/modal';\nimport Trailer from '../trailer/trailer';\n\nexport const Movie = props => {\n  return (\n    <div className=\"movie-container\">\n      <div>\n        <img\n          src={`https://image.tmdb.org/t/p/original${props.movie.backdrop_path}`}\n          alt=\"movie\"\n        />\n        <p className=\"font-thin text-sm\">\n          Rating: {props.movie.vote_average} ({props.movie.vote_count} Voted)\n        </p>\n        <p className=\"movie-overview\">{props.movie.release_date}</p>\n        <h1 className=\"text-2xl font-bold\">{props.movie.title}</h1>\n      </div>\n\n      <Toggle>\n        {({ on, toggle }) => (\n          <div>\n            <button onClick={toggle}>Info</button>\n            <Modal on={on} toggle={toggle}>\n              <div className=\"movie-modal\">\n                <div\n                  className=\"image\"\n                  style={{\n                    backgroundImage: `url(https://image.tmdb.org/t/p/original${props.movie.backdrop_path})`\n                  }}\n                />\n                <div>\n                  <h1>{props.movie.title}</h1>\n                  <p>{props.movie.release_date}</p>\n                  <p>{props.movie.vote_average}/10</p>\n                  <p>{props.movie.vote_count}</p>\n                </div>\n              </div>\n              <Trailer id={props.movie.id} />\n            </Modal>\n          </div>\n        )}\n      </Toggle>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Movie } from '../movie/movie.component';\nimport './movie-list.styles.scss';\n\nexport const MovieList = props => {\n  return (\n    <div className=\"\">\n      <h2>Most Popular Currently</h2>\n      <div className=\"movie-list\">\n        {props.movies.map(movie => (\n          <Movie key={movie.id} movie={movie} />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './full-list.styles.scss';\nimport Toggle from '../toggle/Togglerpc';\nimport Modal from '../modal/modal';\nimport Trailer from '../trailer/trailer';\n\nconst FullList = props => (\n  <div className=\"container full-movie-list-container\">\n    <img\n      onError={e => {\n        e.target.onerror = null;\n        e.target.src =\n          'https://carepharmaceuticals.com.au/wp-content/uploads/sites/19/2018/02/placeholder-600x400.png';\n      }}\n      alt={props.movie.backdrop_path}\n      style={{ borderRadius: '10px' }}\n      src={`https://image.tmdb.org/t/p/w500${props.movie.backdrop_path}`}\n    />\n    <strong>{props.movie.title}</strong>\n    <br />\n    <strong>Released: </strong> {props.movie.release_date} <br />\n    <strong>Popularity: </strong> {props.movie.vote_average}\n    <p>{props.movie.overview}</p>\n    <Toggle>\n      {({ on, toggle }) => (\n        <div>\n          <button className=\"more\" onClick={toggle}>\n            More\n          </button>\n          <Modal on={on} toggle={toggle}>\n            <div className=\"movie-modal\">\n              <div\n                className=\"image\"\n                style={{\n                  backgroundImage: `url(https://image.tmdb.org/t/p/original${props.movie.backdrop_path})`\n                }}\n              />\n              <div>\n                <h1>{props.movie.title}</h1>\n                <p>{props.movie.release_date}</p>\n                <p>{props.movie.vote_average}/10</p>\n                <p>{props.movie.vote_count}</p>\n                <p>{props.movie.overview}</p>\n              </div>\n            </div>\n            <Trailer id={props.movie.id} />\n          </Modal>\n        </div>\n      )}\n    </Toggle>\n  </div>\n);\n\nexport default FullList;\n","import React, { Component } from 'react';\nimport FullList from '../components/full-list/full-list.component';\nimport './test.styles.scss';\n\nconst URL = 'https://api.themoviedb.org/3/search/movie?api_key=';\nconst API_KEY = process.env.REACT_APP_API_KEY;\nconst language = '&language=en-US';\nconst query = '&query=';\n\nclass Test extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movies: [],\n      total_pages: null,\n      page_num: 1,\n      query: null,\n      counter: 1,\n      toggle: false\n    };\n  }\n\n  fetchMovies(search) {\n    fetch(\n      URL +\n        `${API_KEY}` +\n        language +\n        query +\n        search +\n        `&page=` +\n        this.state.counter\n    )\n      .then(response => response.json())\n      .then(results =>\n        this.setState({\n          movies: results.results\n        })\n      );\n  }\n  filterSearch = event => {\n    let term = event.target.value;\n    if (this.state.movies === undefined || []) {\n      this.setState({ counter: 1 });\n    }\n    this.setState(\n      {\n        query: term,\n        toggle: true\n      },\n\n      () => this.fetchMovies(this.state.query)\n    );\n  };\n\n  increase = () => {\n    this.setState(\n      {\n        counter: this.state.counter + 1\n      },\n      () => this.fetchMovies(this.state.query)\n    );\n  };\n  decrease = () => {\n    if (this.state.movies && this.state.counter !== 1) {\n      this.setState(\n        {\n          counter: this.state.counter - 1\n        },\n        () => this.fetchMovies(this.state.query)\n      );\n    }\n  };\n\n  render() {\n    let toggleActive = this.state.movies === undefined ? 'add-toggle' : '';\n    let toggleActiveReset = this.state.toggle === false ? 'add-toggle' : '';\n    return (\n      <div>\n        <div>\n          <h1>Search All Movies</h1>\n        </div>\n        <div>\n          <input placeholder=\"Search by Title\" onChange={this.filterSearch} />\n          <div className=\"button-container\">\n            <div className={' ' + toggleActive + toggleActiveReset}>\n              {this.state.counter === 1 ? (\n                ''\n              ) : (\n                <button onClick={this.decrease} style={{ marginLeft: '0%' }}>\n                  PREVIOUS PAGE\n                </button>\n              )}\n              <button onClick={this.increase} style={{ marginLeft: '0%' }}>\n                NEXT PAGE\n              </button>\n              <div>Page: {this.state.counter}</div>\n            </div>\n          </div>\n        </div>\n        <div className=\"grid-container\">\n          {this.state.movies\n            ? this.state.movies.map(movie => (\n                <FullList key={movie.id} movie={movie} />\n              ))\n            : null}\n        </div>\n      </div>\n    );\n  }\n}\nexport default Test;\n","import React, { Component } from 'react';\n\nimport { MovieList } from './components/movie-list/movie-list.component';\nimport Toggle from './components/toggle/Togglerpc';\n\nimport Logo from './img/logo.png';\nimport './App.css';\nimport Test from './test/test.component';\n\nimport Modal from './components/modal/modal';\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movies: [],\n      searchField: '',\n      page: '2',\n      trailers: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\n      `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&page=1`\n    )\n      .then(response => response.json())\n      .then(results => this.setState({ movies: results.results }));\n\n    fetch(\n      `https://api.themoviedb.org/3/movie/475557/videos?api_key=407a626cc10a99287f2964816749416a&language=en-US`\n    )\n      .then(response => response.json())\n      .then(users => this.setState({ trailers: users.results }));\n  }\n\n  render() {\n    const { movies, searchField } = this.state;\n    const filteredMovies = movies.filter(movie =>\n      movie.title.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <nav\n          style={{\n            display: `flex`,\n            justifyContent: `space-around`,\n            alignItems: `center`\n          }}\n        >\n          <img src={Logo} className=\"h-40\" alt=\"imagemovie\" />\n        </nav>\n\n        <Test />\n        <MovieList movies={filteredMovies} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}