{"version":3,"sources":["img/close-button.svg","components/toggle/Togglerpc.jsx","components/Portal/Portal.jsx","components/modal/modal.jsx","components/movie/movie.component.jsx","components/movie-list/movie-list.component.jsx","components/full-list/full-list.component.jsx","test/test.component.jsx","App.js","index.js"],"names":["module","exports","Toggle","state","on","toggle","setState","children","this","props","Component","portalRoute","document","getElementById","Portal","el","createElement","appendChild","removeChild","ReactDOM","createPortal","Modal","className","onClick","src","Close","alt","style","marginTop","Movie","backgroundImage","movie","backdrop_path","title","vote_average","vote_count","release_date","delay","from","opacity","to","props1","overview","MovieList","marginBottom","movies","map","key","id","FullList","onError","e","target","onerror","borderRadius","fontSize","color","fontWeight","Test","filterSearch","event","term","value","counter","query","fetchMovies","increase","decrease","total_pages","page_num","search","fetch","then","response","json","results","toggleActive","undefined","toggleActiveReset","placeholder","onChange","marginLeft","marginRight","App","searchField","page","trailers","users","filteredMovies","filter","toLowerCase","includes","display","justifyContent","alignItems","height","render"],"mappings":"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","file":"static/js/main.f5f5b663.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close-button.aeec2863.svg\";","import { Component } from \"react\";\n\nexport default class Toggle extends Component {\n  state = {\n    on: false\n  };\n\n  toggle = () => {\n    this.setState({\n      on: !this.state.on\n    });\n  };\n\n  render() {\n    const { children } = this.props;\n    return children({\n      on: this.state.on,\n      toggle: this.toggle\n    });\n  }\n}\n","import { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst portalRoute = document.getElementById('portal');\n\nexport default class Portal extends Component {\n  constructor() {\n    super();\n\n    this.el = document.createElement('div');\n  }\n\n  componentDidMount() {\n    portalRoute.appendChild(this.el);\n  }\n\n  componentWillUnmount() {\n    portalRoute.removeChild(this.el);\n  }\n\n  render() {\n    const { children } = this.props;\n    return ReactDOM.createPortal(children, this.el);\n  }\n}\n","import React, { Component } from \"react\";\nimport Portal from \"../Portal/Portal\";\nimport Close from \"../../img/close-button.svg\";\nimport \"./modal.styles.scss\";\n\n\nexport default class Modal extends Component {\n  render() {\n    const { children, toggle, on } = this.props;\n    return (\n      <Portal>\n        {on && (\n          <div className=\"modal-wrapper\">\n            <button onClick={toggle}>\n              <img src={Close} alt=\"close-button\" />\n            </button>\n            <div style={{ marginTop: \"80px\" }}>{children}</div>\n          </div>\n        )}\n      </Portal>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./movie.styles.scss\";\nimport Toggle from \"../toggle/Togglerpc\";\nimport Modal from \"../modal/modal\";\nimport { Spring } from \"react-spring/renderprops\";\n\nexport const Movie = props => {\n  return (\n    <div>\n      <Toggle>\n        {({ on, toggle }) => (\n          <div\n            onClick={toggle}\n            className=\"movie-container\"\n            style={{\n              backgroundImage: `url(https://image.tmdb.org/t/p/original${props.movie.backdrop_path}`\n            }}\n          >\n            <div className=\"overlay\">\n              <div className=\"details\">\n                <h1 className=\"movie-title\">{props.movie.title}</h1>\n                <p className=\"movie-vote\">\n                  {props.movie.vote_average}{\" \"}\n                  <span className=\"small\">\n                    ({props.movie.vote_count} Votes)\n                  </span>\n                </p>\n                <p className=\"movie-release\">{props.movie.release_date}</p>\n              </div>\n            </div>\n\n            <Modal on={on} toggle={toggle}>\n              <Spring delay={100} from={{ opacity: 0 }} to={{ opacity: 1 }}>\n                {props1 => (\n                  <div style={props1}>\n                    <div className=\"movie-modal\">\n                      <img\n                        className=\"movie-image\"\n                        src={`https://image.tmdb.org/t/p/original${props.movie.backdrop_path}`}\n                        alt=\"\"\n                      />\n                      <div>\n                        <h1 className=\"movie-title\">{props.movie.title}</h1>\n                        <p className=\"movie-release\">\n                          {props.movie.release_date}\n                        </p>\n                        <p className=\"movie-vote\">\n                          {props.movie.vote_average}/10{\" \"}\n                          <span className=\"votes\">\n                            {props.movie.vote_count} votes\n                          </span>\n                        </p>\n\n                        <p className=\"movie-overview\">{props.movie.overview}</p>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </Spring>\n            </Modal>\n          </div>\n        )}\n      </Toggle>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Movie } from \"../movie/movie.component\";\nimport \"./movie-list.styles.scss\";\n\nexport const MovieList = props => {\n  return (\n    <div className=\"\">\n      <h2\n        className=\"page-title\"\n        style={{\n          marginTop: \"20px\",\n          marginBottom: \"40px\"\n        }}\n      >\n        New Releases\n      </h2>\n      <div className=\"movie-list\">\n        {props.movies.map(movie => (\n          <Movie key={movie.id} movie={movie} />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./full-list.styles.scss\";\nimport Toggle from \"../toggle/Togglerpc\";\nimport Modal from \"../modal/modal\";\n\nconst FullList = props => (\n  <div className=\"container full-movie-list-container\">\n    <img\n      onError={e => {\n        e.target.onerror = null;\n        e.target.src =\n          \"https://carepharmaceuticals.com.au/wp-content/uploads/sites/19/2018/02/placeholder-600x400.png\";\n      }}\n      alt={props.movie.backdrop_path}\n      style={{ borderRadius: \"10px\" }}\n      src={`https://image.tmdb.org/t/p/w500${props.movie.backdrop_path}`}\n    />\n    <strong style={{ fontSize: \"1.5rem\", marginBottom: \"10px\" }}>\n      {props.movie.title}\n    </strong>\n\n    <Toggle>\n      {({ on, toggle }) => (\n        <div>\n          <div\n            style={{ color: \"red\", fontWeight: \"600\" }}\n            className=\"more\"\n            onClick={toggle}\n          >\n            Movie Details\n          </div>\n          <Modal on={on} toggle={toggle}>\n            <div className=\"movie-modal\">\n              <div\n                className=\"image\"\n                style={{\n                  backgroundImage: `url(https://image.tmdb.org/t/p/original${props.movie.backdrop_path})`\n                }}\n              />\n              <div>\n                <h1 style={{ fontWeight: \"bold\", fontSize: \"3rem\" }}>\n                  {props.movie.title}\n                </h1>\n                <p style={{ fontWeight: \"400\", fontSize: \"14px\" }}>\n                  {props.movie.release_date}\n                </p>\n                <p\n                  style={{ fontWeight: \"bold\", fontSize: \"12px\", color: \"red\" }}\n                >\n                  {props.movie.vote_average}/10\n                </p>\n                <p style={{ fontWeight: \"400\", fontSize: \"10px\" }}>\n                  {props.movie.vote_count} votes\n                </p>\n                <p style={{ fontWeight: \"400\", fontSize: \"1rem\" }}>\n                  {props.movie.overview}\n                </p>\n              </div>\n            </div>\n            {/* <Trailer id={props.movie.id} /> */}\n          </Modal>\n        </div>\n      )}\n    </Toggle>\n  </div>\n);\n\nexport default FullList;\n","import React, { Component } from 'react';\nimport FullList from '../components/full-list/full-list.component';\nimport './test.styles.scss';\n\nconst URL = 'https://api.themoviedb.org/3/search/movie?api_key=';\nconst API_KEY = '407a626cc10a99287f2964816749416a';\nconst language = '&language=en-US';\nconst query = '&query=';\n\nclass Test extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movies: [],\n      total_pages: null,\n      page_num: 1,\n      query: null,\n      counter: 1,\n      toggle: false,\n    };\n  }\n\n  fetchMovies(search) {\n    fetch(\n      URL +\n        `${API_KEY}` +\n        language +\n        query +\n        search +\n        `&page=` +\n        this.state.counter\n    )\n      .then((response) => response.json())\n      .then((results) =>\n        this.setState({\n          movies: results.results,\n        })\n      );\n  }\n  filterSearch = (event) => {\n    let term = event.target.value;\n    if (this.state.movies === undefined || []) {\n      this.setState({ counter: 1 });\n    }\n    this.setState(\n      {\n        query: term,\n        toggle: true,\n      },\n\n      () => this.fetchMovies(this.state.query)\n    );\n  };\n\n  increase = () => {\n    this.setState(\n      {\n        counter: this.state.counter + 1,\n      },\n      () => this.fetchMovies(this.state.query)\n    );\n  };\n  decrease = () => {\n    if (this.state.movies && this.state.counter !== 1) {\n      this.setState(\n        {\n          counter: this.state.counter - 1,\n        },\n        () => this.fetchMovies(this.state.query)\n      );\n    }\n  };\n\n  render() {\n    let toggleActive = this.state.movies === undefined ? 'add-toggle' : '';\n    let toggleActiveReset = this.state.toggle === false ? 'add-toggle' : '';\n    return (\n      <div>\n        <div>\n          <input placeholder='Search Movie ..' onChange={this.filterSearch} />\n          <div className='button-container'>\n            <div className={' ' + toggleActive + toggleActiveReset}>\n              {this.state.counter === 1 ? (\n                ''\n              ) : (\n                <button\n                  onClick={this.decrease}\n                  style={{\n                    marginLeft: '0%',\n                    marginTop: '20px',\n                    marginBottom: '20px',\n                    marginRight: '10px',\n                  }}\n                >\n                  PREVIOUS PAGE\n                </button>\n              )}\n              <button\n                onClick={this.increase}\n                style={{\n                  marginLeft: '0%',\n                  marginTop: '20px',\n                  marginBottom: '20px',\n                  marginRight: '10px',\n                }}\n              >\n                NEXT PAGE\n              </button>\n              <div>Page: {this.state.counter}</div>\n            </div>\n          </div>\n        </div>\n        <div className='grid-container'>\n          {this.state.movies\n            ? this.state.movies.map((movie) => (\n                <FullList key={movie.id} movie={movie} />\n              ))\n            : null}\n        </div>\n      </div>\n    );\n  }\n}\nexport default Test;\n","import React, { Component } from 'react';\n\nimport { MovieList } from './components/movie-list/movie-list.component';\n\n// import Logo from \"./img/logo.png\";\nimport './App.css';\nimport Test from './test/test.component';\n\n// const API_KEY = process.env.REACT_APP_API_KEY;\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movies: [],\n      searchField: '',\n      page: '2',\n      trailers: [],\n    };\n  }\n\n  componentDidMount() {\n    fetch(\n      `https://api.themoviedb.org/3/movie/popular?api_key=407a626cc10a99287f2964816749416a&language=en-US&page=1`\n    )\n      .then((response) => response.json())\n      .then((results) => this.setState({ movies: results.results }));\n\n    fetch(\n      `https://api.themoviedb.org/3/movie/475557/videos?api_key=407a626cc10a99287f2964816749416a&language=en-US`\n    )\n      .then((response) => response.json())\n      .then((users) => this.setState({ trailers: users.results }));\n  }\n\n  render() {\n    const { movies, searchField } = this.state;\n    const filteredMovies = movies.filter((movie) =>\n      movie.title.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className='App'>\n        <nav\n          style={{\n            display: `flex`,\n            justifyContent: `space-around`,\n            alignItems: `center`,\n            height: '50px',\n          }}\n        ></nav>\n\n        <Test />\n\n        <MovieList movies={filteredMovies} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}